<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on CodeXlog</title><link>https://codex-devlab.github.io/posts/dev/</link><description>Recent content in Dev on CodeXlog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 08 Jan 2025 08:06:25 +0600</lastBuildDate><atom:link href="https://codex-devlab.github.io/posts/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Manual</title><link>https://codex-devlab.github.io/posts/dev/git/</link><pubDate>Fri, 18 May 2018 08:12:43 +0500</pubDate><guid>https://codex-devlab.github.io/posts/dev/git/</guid><description>&lt;h3 id="pre-commit">Pre-commit&lt;/h3>
&lt;blockquote>
&lt;p>Pre Commit의 동작은 Commit이 이루어지는 시점에 Commit이 완료 되기전에 해당 스크립트가 실행되는 방식입니다.&lt;br>
&lt;code>$ git init&lt;/code> 혹은 저장소를 Clone받게 되면 경로에 &lt;code>.git/hooks&lt;/code>&lt;br>
내부에 다양한 Hook이 있는걸 확인 할 수 있습니다.&lt;/p>&lt;/blockquote>
&lt;p>Pre Commit을 사용하는 두 가지 방법이 있습니다.
상세하게 따져본다면 git hook을 사용하는것은 동일하나,&lt;br>
이를 관리하는 방법이 조금 상이합니다.&lt;/p>
&lt;p>Pre Commit을 사용하는 이유는 몇가지가 있지만,&lt;br>
가장 큰 목적은 동료와의 협업, Commit 관리, 오류 방지 등이 있다고 생각합니다.&lt;/p>
&lt;p>예를 들어 Lint, Syntex Error 등이 해당 될 듯 합니다.&lt;/p></description></item></channel></rss>