<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo-Toha Theme on CodeXlog</title><link>https://codex-devlab.github.io/tags/hugo-toha-theme/</link><description>Recent content in Hugo-Toha Theme on CodeXlog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 01 Jan 2025 08:06:25 +0600</lastBuildDate><atom:link href="https://codex-devlab.github.io/tags/hugo-toha-theme/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo</title><link>https://codex-devlab.github.io/posts/blog-migration/sub-hugo/</link><pubDate>Wed, 01 Jan 2025 08:06:25 +0600</pubDate><guid>https://codex-devlab.github.io/posts/blog-migration/sub-hugo/</guid><description>&lt;h2 id="development">Development&lt;/h2>
&lt;details>
&lt;summary>Running the forked theme against your own site&lt;/summary>
&lt;h3 id="running-the-forked-theme-against-your-own-site">Running the forked theme against your own site&lt;/h3>
&lt;p>&lt;a href="https://toha-guides.netlify.app/posts/contributing/#running-the-forked-theme-against-your-own-site" target="_blank" rel="noopener">참고&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>원활한 커스텀을 위해, 테마를 Fork하여 별도의 저장소로 관리.&lt;/p>&lt;/blockquote>
&lt;p>과정은 간단합니다.
Go 개발시에 로컬 모듈을 go.mod에 추가하여 개발하는 방식과 동일 합니다.&lt;br>
단, toha의 테마에 있는 설정들과 스크립트들이 &lt;code>github.com/hugo-toha/toha/v4&lt;/code>를&lt;br>
바라보고 있기 때문에 사설 레포의 경로로 변경해줘야 합니다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>toha의 테마 원격 저장소를 Fork 하여 본인의 Github로 가져 옵니다.&lt;br>
저는 저장소를 Fork하면서 이름을 &lt;a href="github.com/codex-devlab/customs_theme">customs_theme&lt;/a> 로 변경했습니다.&lt;/p></description></item></channel></rss>